import copy, random, re

def RANDOM_INT(min, max):
    r"""
    Return a random integer between `min` and `max` included.

        >>> RANDOM_INT(3,5)     # doctest: +SKIP
        4

        >>> RANDOM_INT(3,3)
        3
    """
    return random.randint(min, max)

def RANDOM_CHOICE(*args):
    r"""
    Return a random element of `args`

        >>> RANDOM_CHOICE("alice", "bob", "charlie")  # doctest: +SKIP
        'charlie'

        >>> RANDOM_CHOICE("alice")
        'alice'
    """
    return random.choice(args)

def RANDOM_VECTOR(n, generator, *args):
    r"""
    Return a random vector of length `n` and whose elements are
    generated by calling `generator(*args)`

    This return a random vector of integers of length 5, with
    elements between 1 and 3:

        >>> RANDOM_VECTOR(5, RANDOM_INT, 1, 3) # doctest: +SKIP
        [3, 1, 2, 1, 3]

        >>> RANDOM_VECTOR(5, RANDOM_INT, 1, 1)
        [1, 1, 1, 1, 1]
    """
    return [generator(*args) for i in range(n)]

def RANDOM_VALOUREF():
    r"""
    pas sur que ce soit la meilleur des methodes....
    """
    return str(random.choice(['REF', 'VAL']))

    
locals = {
    "RANDOM_INT": RANDOM_INT,
    "RANDOM_CHOICE": RANDOM_CHOICE,
    "RANDOM_VECTOR": RANDOM_VECTOR,
    "RANDOM_VALOUREF": RANDOM_VALOUREF
}
